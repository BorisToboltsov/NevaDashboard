# Generated by Django 4.0.1 on 2022-01-12 12:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CatalogData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='Значение')),
                ('sequence', models.PositiveBigIntegerField(verbose_name='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CatalogName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Имя')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=100, verbose_name='Фио')),
                ('post', models.CharField(max_length=100, verbose_name='Должность')),
                ('organization', models.CharField(max_length=100, verbose_name='Наименование организации')),
                ('department', models.CharField(max_length=100, verbose_name='Отдел')),
                ('phone_number', models.CharField(max_length=12, verbose_name='Номер телефона')),
                ('id_telegramm', models.PositiveIntegerField(verbose_name='id телеграмма')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('actual_address', models.CharField(max_length=255, verbose_name='Адрес фактический')),
                ('official_address', models.CharField(max_length=255, verbose_name='Адрес юридический')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=100, verbose_name='Фио сотрудника')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_id', models.ManyToManyField(to='dashboard.Contact')),
                ('post_employee_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.catalogdata')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_group', models.CharField(max_length=255, verbose_name='Название группы')),
                ('number_people', models.PositiveSmallIntegerField(verbose_name='Количество человек')),
                ('school_group', models.CharField(max_length=255, verbose_name='Школьная группа')),
                ('paid_status', models.CharField(max_length=50, verbose_name='Статус оплаты')),
                ('arrival_date', models.DateTimeField(verbose_name='Дата прибытия')),
                ('departure_date', models.DateTimeField(verbose_name='Дата отъезда')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.employeedata')),
            ],
        ),
        migrations.CreateModel(
            name='RegistryTransportOrganizations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_organization', models.CharField(max_length=255, verbose_name='Название организации')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('catalog_data_id', models.ManyToManyField(to='dashboard.CatalogData')),
                ('contact_id', models.ManyToManyField(to='dashboard.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='RegistrySendingTravelAgency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_organization', models.CharField(max_length=255, verbose_name='Название организации')),
                ('account_number', models.BigIntegerField(blank=True, unique=True, verbose_name='Номер счета')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_id', models.ManyToManyField(to='dashboard.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='RegistryMuseum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_organization', models.CharField(max_length=255, verbose_name='Название организации')),
                ('online_ticket', models.CharField(max_length=255, verbose_name='Онлайн билет')),
                ('order_adult', models.CharField(max_length=255, verbose_name='Взрослый наряд')),
                ('order_school', models.CharField(max_length=255, verbose_name='Школьный наряд')),
                ('number_group', models.PositiveSmallIntegerField(verbose_name='Количество человек в группе')),
                ('working_hours', models.CharField(max_length=255, verbose_name='Время работы')),
                ('weekend', models.CharField(max_length=255, verbose_name='Выходные')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('catalog_data_id', models.ManyToManyField(to='dashboard.CatalogData')),
                ('contact_id', models.ManyToManyField(to='dashboard.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='RegistryHotels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_organization', models.CharField(max_length=255, verbose_name='Название организации')),
                ('location', models.CharField(max_length=255, verbose_name='Локация')),
                ('number_room', models.PositiveSmallIntegerField(verbose_name='Количество номером')),
                ('official_website', models.URLField(verbose_name='Оффициальный website')),
                ('parking', models.CharField(max_length=255, verbose_name='Наличие и стоимость парковки')),
                ('extra_space', models.CharField(max_length=255, verbose_name='Возможность доп места')),
                ('early_check_in', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Стоимость раннего заезда')),
                ('late_check_out', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Стоимость позднего заезда')),
                ('conference_room', models.TextField(blank=True, null=True, verbose_name='Характеристики конференц зала + стоимость')),
                ('children', models.PositiveSmallIntegerField(verbose_name='До скольких лет дети бесплатно')),
                ('disabled_people', models.PositiveSmallIntegerField(verbose_name='Количество номеров для инвалидов')),
                ('disabled_people_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий к номера для инвалидов')),
                ('animals', models.CharField(max_length=255, verbose_name='Размещение с животными')),
                ('restaurant', models.CharField(max_length=255, verbose_name='Тип ресторана')),
                ('breakfast_time', models.TimeField(verbose_name='Время завтраков')),
                ('luggage_storage', models.CharField(max_length=255, verbose_name='Камера хранения')),
                ('registration_fee', models.CharField(max_length=255, verbose_name='Рег. сбор')),
                ('connect', models.CharField(max_length=255, verbose_name='Коннекты')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_id', models.ManyToManyField(to='dashboard.Contact')),
                ('number_stars_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.catalogdata')),
            ],
        ),
        migrations.CreateModel(
            name='RegistryFoodOrganizations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_organization', models.CharField(max_length=255, verbose_name='Название организации')),
                ('legal_name_organization', models.CharField(max_length=255, verbose_name='Юр. название организации')),
                ('operation_mode', models.CharField(max_length=255, verbose_name='Режим работы')),
                ('capacity', models.SmallIntegerField(verbose_name='Вместимость')),
                ('capacity_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий к вместимости')),
                ('positive_rating', models.SmallIntegerField(verbose_name='Положительный рейтинг')),
                ('negative_rating', models.SmallIntegerField(verbose_name='Отрицательный рейтинг')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('catalog_data_id', models.ManyToManyField(to='dashboard.CatalogData')),
                ('contact_id', models.ManyToManyField(to='dashboard.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='GroupTransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_address', models.CharField(max_length=100, verbose_name='Адрес подачи')),
                ('submission_time', models.DateTimeField(verbose_name='Дата и время подачи')),
                ('completion_address', models.CharField(max_length=100, verbose_name='Адрес завершения')),
                ('completion_time', models.DateTimeField(verbose_name='Дата и время завершения')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.group')),
                ('registry_transport_organizations_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.registrytransportorganizations')),
                ('type_tk_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.catalogdata')),
            ],
        ),
        migrations.CreateModel(
            name='GroupMuseum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Дата, время')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.group')),
                ('guide_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.employeedata')),
                ('registry_museum_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.registrymuseum')),
            ],
        ),
        migrations.CreateModel(
            name='GroupHotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_date', models.DateTimeField(verbose_name='Дата заезда')),
                ('departure_date', models.DateTimeField(verbose_name='Дата выезда')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.group')),
                ('registry_hotels_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.registryhotels')),
            ],
        ),
        migrations.CreateModel(
            name='GroupFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Дата, время')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.group')),
                ('registry_food_organizations_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.registryfoodorganizations')),
                ('type_meal_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.catalogdata')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='registry_sending_travel_agency_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.registrysendingtravelagency'),
        ),
        migrations.AddField(
            model_name='catalogdata',
            name='catalog_name_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.catalogname'),
        ),
    ]
